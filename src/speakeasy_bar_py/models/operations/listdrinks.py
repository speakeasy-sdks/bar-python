"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import pydantic
from speakeasy_bar_py.models.components import (
    drink as components_drink,
    drinktype as components_drinktype,
    error as components_error,
    httpmetadata as components_httpmetadata,
)
from speakeasy_bar_py.types import BaseModel
from speakeasy_bar_py.utils import FieldMetadata, QueryParamMetadata
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class ListDrinksRequestTypedDict(TypedDict):
    drink_type: NotRequired[components_drinktype.DrinkType]
    r"""The type of drink to filter by. If not provided all drinks will be returned."""


class ListDrinksRequest(BaseModel):
    drink_type: Annotated[
        Optional[components_drinktype.DrinkType],
        pydantic.Field(alias="drinkType"),
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The type of drink to filter by. If not provided all drinks will be returned."""


class ListDrinksResponseTypedDict(TypedDict):
    http_meta: components_httpmetadata.HTTPMetadataTypedDict
    drinks: NotRequired[List[components_drink.DrinkTypedDict]]
    r"""A list of drinks."""
    error: NotRequired[components_error.ErrorTypedDict]
    r"""An unknown error occurred interacting with the API."""


class ListDrinksResponse(BaseModel):
    http_meta: Annotated[
        Optional[components_httpmetadata.HTTPMetadata], pydantic.Field(exclude=True)
    ] = None

    drinks: Optional[List[components_drink.Drink]] = None
    r"""A list of drinks."""

    error: Optional[components_error.Error] = None
    r"""An unknown error occurred interacting with the API."""
