"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ...models.components import error as components_error
from ...models.components import httpmetadata as components_httpmetadata
from barpython import utils
from dataclasses_json import Undefined, dataclass_json
from typing import List, Optional


@dataclasses.dataclass
class ListIngredientsRequest:
    page: int = dataclasses.field(metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    ingredients: Optional[List[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ingredients', 'style': 'form', 'explode': False }})
    r"""A list of ingredients to filter by. If not provided all ingredients will be returned."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Data:
    result_array: List[int] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultArray') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListIngredientsResponseBody:
    r"""A list of ingredients."""
    data: Optional[Data] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListIngredientsResponse:
    http_meta: components_httpmetadata.HTTPMetadata = dataclasses.field(metadata={'dataclasses_json': { 'exclude': lambda f: True }})
    object: Optional[ListIngredientsResponseBody] = dataclasses.field(default=None)
    r"""A list of ingredients."""
    error: Optional[components_error.Error] = dataclasses.field(default=None)
    r"""An unknown error occurred interacting with the API."""
    

